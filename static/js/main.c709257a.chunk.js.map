{"version":3,"sources":["reportWebVitals.js","Nets_Logo.png","pages/home/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HomePage","useState","setHistory","startValue1","setStartValue1","startValue2","setStartValue2","setStartValue3","endValue1","setEndValue1","endValue2","setEndValue2","setEndValue3","useEffect","requestOptions","method","headers","Headers","redirect","fetch","response","json","result","today","map","item","day","hour","push","minute","online","counter","terminals","data","name","columns","points","_","sortBy","o","timeseries","TimeSeries","console","log","catch","error","PhysTermStart","OnlEcomStart","IaltStart","PhysTermSlut","OnlEcomSlut","IaltSlut","className","autoPlay","muted","playsInline","loop","preload","id","poster","src","type","start","end","duration","separator","preserveValue","parseInt","mainLogo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c709257a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/Nets_Logo.f41d039e.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Counter from \"../../components/Counter\";\r\nimport CountUp from 'react-countup';\r\nimport mainLogo from '../../Nets_Logo.png';\r\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart } from \"react-timeseries-charts\";\r\nimport { TimeSeries, TimeRange } from \"pondjs\";\r\nimport _ from \"lodash\"\r\nexport default function HomePage() {\r\n  const [history, setHistory] = useState(null);\r\n  const [startValue1, setStartValue1] = useState(null);\r\n  const [startValue2, setStartValue2] = useState(null);\r\n  const [startValue3, setStartValue3] = useState(null);\r\n  const [endValue1, setEndValue1] = useState(null);\r\n  const [endValue2, setEndValue2] = useState(null);\r\n  const [endValue3, setEndValue3] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    var myHeaders = new Headers();\r\n\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      headers: myHeaders,\r\n      redirect: 'follow'\r\n    };\r\n\r\n\r\n    fetch(\"https://hexatownnets.blob.core.windows.net/feeds/monitor.json\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n\r\n        var today = []\r\n\r\n        result.map(item => {\r\n          if (item.day === 23 && item.hour === 6 ){\r\n            today.push( [ item.hour * 60 + item.minute, item.online.counter, item.terminals.counter])\r\n          }\r\n\r\n        })\r\n        \r\n        const data = {\r\n          name: \"traffic\",\r\n          columns: [\"time\", \"in\", \"out\"],\r\n          points: _.sortBy(today,[function(o) { return o[0] }])\r\n\r\n        };\r\n\r\n        const timeseries = new TimeSeries(data);\r\n        setHistory(timeseries)\r\n        console.log(result)\r\n      })\r\n      .catch(error => console.log('error', error));\r\n\r\n    fetch(\"https://nocc-api.azurewebsites.net//data\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n\r\n\r\n        setStartValue1(result.PhysTermStart)\r\n        setStartValue2(result.OnlEcomStart)\r\n        setStartValue3(result.IaltStart)\r\n        setEndValue1(result.PhysTermSlut)\r\n        setEndValue2(result.OnlEcomSlut)\r\n        setEndValue3(result.IaltSlut)\r\n\r\n        console.log(result)\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }, [startValue1]);\r\n/*\r\n  return (\r\n    <div>\r\n\r\n      {history &&\r\n        <div>\r\n          <ChartContainer timeRange={history} width={800}>\r\n            <ChartRow height=\"200\">\r\n              <YAxis id=\"axis1\" label=\"AUD\" min={0.5} max={1.5} width=\"60\" type=\"linear\" format=\"$,.2f\" />\r\n              <Charts>\r\n                <LineChart axis=\"axis1\" series={history} />\r\n                \r\n              </Charts>\r\n              <YAxis id=\"axis2\" label=\"Euro\" min={0.5} max={1.5} width=\"80\" type=\"linear\" format=\"$,.2f\" />\r\n            </ChartRow>\r\n          </ChartContainer>\r\n\r\n\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n\r\n  )*/\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <video\r\n        autoPlay=\"autoplay\"\r\n        muted\r\n        playsInline\r\n        loop=\"loop\"\r\n        preload=\"auto\"\r\n        id=\"myVideo\"\r\n        poster=\"Poster.png\"\r\n        className=\"myVideo\"\r\n      >\r\n        <source src=\"video2.mp4\" type=\"video/mp4\" />\r\n      </video>\r\n\r\n      <div className=\"content\">\r\n        <div className=\"heading\">\r\n          <div>Realtime Transactions</div>\r\n        </div>\r\n\r\n        <div className=\"numbers\">\r\n          <div className=\"column\">\r\n            <div className=\"caption\">Point of Sales</div>\r\n            <div className=\"value\"><CountUp start={startValue1} end={endValue1} duration={300} separator={\".\"} preserveValue={true} /></div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"caption\">Online</div>\r\n            <div className=\"value\"><CountUp start={startValue2} end={endValue2} duration={300} separator={\".\"} /></div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"caption\">Total</div>\r\n            <div className=\"value\"><CountUp start={parseInt(startValue1) + parseInt(startValue2)} end={parseInt(endValue1) + parseInt(endValue2)} duration={300} separator={\".\"} /></div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"logoImageHolder\">\r\n        <div className=\"logoImage\">\r\n          <img src={mainLogo} alt=\"fireSpot\" type=\"image/png\" />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport HomePage from './pages/home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HomePage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}