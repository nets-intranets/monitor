{"version":3,"sources":["reportWebVitals.js","Nets_Logo.png","pages/home/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","series","TimeSeries","name","columns","points","map","d","value1","value2","Index","getIndexString","Date","HomePage","useState","setHistory","startValue1","setStartValue1","startValue2","setStartValue2","setStartValue3","endValue1","setEndValue1","endValue2","setEndValue2","setEndValue3","useEffect","requestOptions","method","headers","Headers","redirect","fetch","response","json","result","today","item","day","push","hour","minute","online","counter","terminals","console","log","catch","error","PhysTermStart","OnlEcomStart","IaltStart","PhysTermSlut","OnlEcomSlut","IaltSlut","styler","key","color","selected","className","autoPlay","muted","playsInline","loop","preload","id","poster","src","type","start","end","duration","separator","preserveValue","parseInt","mainLogo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.193839a4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/Nets_Logo.f41d039e.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\n\r\nimport Counter from \"../../components/Counter\";\r\nimport CountUp from 'react-countup';\r\nimport mainLogo from '../../Nets_Logo.png';\r\nimport { Charts, ChartContainer, ChartRow, YAxis, BarChart, Resizable, styler } from \"react-timeseries-charts\";\r\nimport { TimeSeries, Index } from \"pondjs\";\r\nimport _ from \"lodash\"\r\nimport { hydrate } from \"react-dom\";\r\n\r\nconst data = [\r\n  [\"2017-01-24T00:00\", 0.01, 0.5],\r\n  [\"2017-01-24T01:00\", 0.13, 0.5],\r\n  [\"2017-01-24T02:00\", 0.07, 0.5],\r\n  [\"2017-01-24T03:00\", 0.04, 0.5],\r\n  [\"2017-01-24T04:00\", 0.33, 0.5],\r\n  [\"2017-01-24T05:00\", 0, 0.5],\r\n  [\"2017-01-24T06:00\", 0, 0.5],\r\n  [\"2017-01-24T07:00\", 0, 0.5],\r\n  [\"2017-01-24T08:00\", 0.95, 0.5],\r\n  [\"2017-01-24T09:00\", 1.12, 0.5],\r\n  [\"2017-01-24T10:00\", 0.66, 0.5],\r\n  [\"2017-01-24T11:00\", 0.06, 0.5],\r\n  [\"2017-01-24T12:00\", 0.3, 0.5],\r\n  [\"2017-01-24T13:00\", 0.05, 0.5],\r\n  [\"2017-01-24T14:00\", 0.5, 0.5],\r\n  [\"2017-01-24T15:00\", 0.24, 0.5],\r\n  [\"2017-01-24T16:00\", 0.02, 0.5],\r\n  [\"2017-01-24T17:00\", 0.98, 0.5],\r\n  [\"2017-01-24T18:00\", 0.46, 0.5],\r\n  [\"2017-01-24T19:00\", 0.8, 0.5],\r\n  [\"2017-01-24T20:00\", 0.39, 0.5],\r\n  [\"2017-01-24T21:00\", 0.4, 0.5],\r\n  [\"2017-01-24T22:00\", 0.39, 0.5],\r\n  [\"2017-01-25T23:00\", 0.28, 0.5]\r\n];\r\n\r\nconst series = new TimeSeries({\r\n  name: \"hilo_rainfall\",\r\n  columns: [\"index\", \"phys\", \"ecomm\"],\r\n  points: data.map(([d, value1, value2]) => [\r\n      Index.getIndexString(\"1h\", new Date(d)),\r\n      value1, value2\r\n  ])\r\n});\r\n\r\nexport default function HomePage() {\r\n  const [history, setHistory] = useState(series);\r\n  const [startValue1, setStartValue1] = useState(null);\r\n  const [startValue2, setStartValue2] = useState(null);\r\n  const [startValue3, setStartValue3] = useState(null);\r\n  const [endValue1, setEndValue1] = useState(null);\r\n  const [endValue2, setEndValue2] = useState(null);\r\n  const [endValue3, setEndValue3] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    var myHeaders = new Headers();\r\n\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      headers: myHeaders,\r\n      redirect: 'follow'\r\n    };\r\n\r\n\r\n    fetch(\"https://hexatownnets.blob.core.windows.net/feeds/monitor.json\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        var today = []\r\n\r\n        result.map(item => {\r\n          if (item.day === 25){\r\n            today.push( [ '2021-11-25T'+(item.hour<10?'0'+item.hour:item.hour)+':'+ (item.minute<10?'0'+item.minute:item.minute), item.online.counter, item.terminals.counter])\r\n          }\r\n\r\n        })\r\n        //setHistory(today)\r\n\r\n        const series = new TimeSeries({\r\n          name: \"transactionss\",\r\n          columns: [\"index\", \"phys\", \"ecomm\"],\r\n          points: today.map(([d, value1, value2]) => [\r\n              Index.getIndexString(\"1h\", new Date(d)),\r\n              value1, value2\r\n          ])\r\n      });\r\n        setHistory(series)\r\n        console.log(result)\r\n\r\n      })\r\n      .catch(error => console.log('error', error));\r\n\r\n\r\n    fetch(\"https://nocc-api.azurewebsites.net//data\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n\r\n\r\n        setStartValue1(result.PhysTermStart)\r\n        setStartValue2(result.OnlEcomStart)\r\n        setStartValue3(result.IaltStart)\r\n        setEndValue1(result.PhysTermSlut)\r\n        setEndValue2(result.OnlEcomSlut)\r\n        setEndValue3(result.IaltSlut)\r\n\r\n        console.log(result)\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }, [startValue1]);\r\n\r\n\r\n\r\nconst style = styler([\r\n  { key: \"phys\", color: \"#A5C8E1\", selected: \"#2CB1CF\" },\r\n  { key: \"ecomm\", color: \"#FFCC9E\", selected: \"#2CB1CF\" }]);\r\n  /*\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <b>BarChart</b>\r\n            </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              \r\n\r\n{!false && \r\n                <Resizable>\r\n                  \r\n                    <ChartContainer \r\n                      timeRange={history.range()}\r\n                      enablePanZoom={true} >\r\n                        <ChartRow height=\"150\">\r\n                            <YAxis\r\n                                id=\"transactions\"\r\n                                label=\"Transactions\"\r\n                                min={0}\r\n                                max={400}\r\n                                format=\".2f\"\r\n                                width=\"70\"\r\n                                type=\"linear\"\r\n                            />\r\n                            <Charts>\r\n                                <BarChart\r\n                                    axis=\"transactions\"\r\n                                    spacing={1}\r\n                                    columns={[\"phys\", \"ecomm\"]}\r\n                                    series={history}\r\n                                    style={style}\r\n                                />\r\n                            </Charts>\r\n                        </ChartRow>\r\n                    </ChartContainer>\r\n                </Resizable>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n  return (\r\n    <div>\r\n\r\n      {history &&\r\n        <div>\r\n          <ChartContainer timeRange={history} width={800}>\r\n            <ChartRow height=\"200\">\r\n              <YAxis id=\"axis1\" label=\"AUD\" min={0.5} max={1.5} width=\"60\" type=\"linear\" format=\"$,.2f\" />\r\n              <Charts>\r\n                <LineChart axis=\"axis1\" series={history} />\r\n                \r\n              </Charts>\r\n              <YAxis id=\"axis2\" label=\"Euro\" min={0.5} max={1.5} width=\"80\" type=\"linear\" format=\"$,.2f\" />\r\n            </ChartRow>\r\n          </ChartContainer>\r\n\r\n\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n\r\n  )*/\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <video\r\n        autoPlay=\"autoplay\"\r\n        muted\r\n        playsInline\r\n        loop=\"loop\"\r\n        preload=\"auto\"\r\n        id=\"myVideo\"\r\n        poster=\"Poster.png\"\r\n        className=\"myVideo\"\r\n      >\r\n        <source src=\"video2_3.mp4\" type=\"video/mp4\" />\r\n      </video>\r\n\r\n      <div className=\"content\">\r\n        <div className=\"heading\">\r\n          <div>Realtime Transactions</div>\r\n        </div>\r\n\r\n        <div className=\"numbers\">\r\n          <div className=\"column\">\r\n            <div className=\"caption\">Point of Sales</div>\r\n            <div className=\"value\"><CountUp start={startValue1} end={endValue1} duration={300} separator={\".\"} preserveValue={true} /></div>\r\n          </div>\r\n          <div className=\"column\">\r\n              <div className=\"caption\">Online</div>\r\n            <div className=\"value\"><CountUp start={startValue2} end={endValue2} duration={300} separator={\".\"} /></div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"caption\">Total</div>\r\n            <div className=\"value\"><CountUp start={parseInt(startValue1) + parseInt(startValue2)} end={parseInt(endValue1) + parseInt(endValue2)} duration={300} separator={\".\"} /></div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"logoImageHolder\">\r\n        <div className=\"logoImage\">\r\n          <img src={mainLogo} alt=\"fireSpot\" type=\"image/png\" />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport HomePage from './pages/home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HomePage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}